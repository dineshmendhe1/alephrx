# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# Get the private IP address from the environment, to allow a developer to
# override the default.
private_ip = ENV['ALEPHRX_VM_IP'] || "192.168.33.10"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # Every Vagrant virtual environment requires a box to build off of.
  # This box is provided by Puppet Labs; see http://puppet-vagrant-boxes.puppetlabs.com/ 
  config.vm.box = "centos51"
  config.vm.box_url = "http://puppet-vagrant-boxes.puppetlabs.com/centos-510-i386-virtualbox-puppet.box"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: private_ip

  config.vm.hostname = "alephrx"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # Share the application working copy with the VM. Note that this is probably
  # only appropriate for individual development VMs on workstations. If we use
  # Vagrant to manage shared dev/staging/production environments, we will
  # probably want to do a checkout on the server instead.
  config.vm.synced_folder "../", "/apps/git/alephrx"

  # Enable provisioning with Puppet stand alone.  Puppet manifests
  # are contained in a directory path relative to this Vagrantfile.
  
  # before using puppet, install the additional mysql module from
  # puppetlabs to declaratively manage the mysql configuration
  # check the list of installed modules first, so we don't get spurious errors
  # when re-running this provisioner
  config.vm.provision "shell",
    inline: "(puppet module list | grep -q puppetlabs-mysql) || puppet module install puppetlabs-mysql"

  # use puppet to install packages and configure the database
  config.vm.provision "puppet" do |puppet|
    puppet.manifest_file  = "simple.pp"
    puppet.facter = {
      "domain" => "local",
    }
    puppet.options = ["--environment", "vagrant"]
  end

  # use the shell provisioner to do additional configuration
  config.vm.provision "shell", path: "vm-setup"
end
