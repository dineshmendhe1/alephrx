#!/usr/local/bin/perl

## Jamie Bush, 2004
## RxWeb (AlephRx) version 3.1
## name changed 6/20/06 
##
#########################################################################
## This form receives the emailing options generated by ALEPHform.cgi and
## sends the email to the sendmail program and then displays 
## the full record.
##
## This file and ALEPHform.cgi must be in the same directory
#########################################################################

############################################################################
## update 20080109 - JB, added "dlcooper@umd.edu" as bcc, see sub bcc_create
##    2009/09/23 - Hans - removed dlcooper
##    2010/09/07 - Hans - Changed aleph@itd.umd.edu to usmaialeph@umd.edu
##    2011/04/21 - Hans - Changed typo "Your have submitted ..."
############################################################################

use CGI;
use DBI;
use CGI::Carp qw(fatalsToBrowser);
use IO::Handle;
use lib "/lims/lib/perl";







# get db connection info from the environment
# use SetEnv in the Apache config for the cgi-bin directory to set these
$database  = $ENV{ALEPHRX_DATABASE_NAME};
$db_server = $ENV{ALEPHRX_DATABASE_HOST};
$user      = $ENV{ALEPHRX_DATABASE_USER};
$password  = $ENV{ALEPHRX_DATABASE_PASS};

$statement = "";
$id = "";
$rname = "";
$response = "";
#$recipient = "jamieb\@itd.umd.edu";
$from = "usmaialeph\@umd.edu (RxWeb)";
$mailprog = $ENV{ALEPHRX_MAILER};
$query = new CGI;
$email_check = 0;






$input_size = $ENV { 'CONTENT_LENGTH' };
read ( STDIN, $form_info, $input_size );
@input_pairs = split (/[&;]/, $form_info);


%input = ();

foreach $pair (@input_pairs) {
  #Convert plusses to spaces
    $pair =~ s/\+/ /g;

  #Split the name and value pair
    ($name, $value) = split (/=/, $pair);

  #Decode the URL encoded name and value
    $name =~ s/%([A-Fa-f0-9]{2})/pack("c",hex($1))/ge;
    $value =~ s/%([A-Fa-f0-9]{2})/pack("c",hex($1))/ge;

  #Escape the single quotes
#    $value =~ s/\'/\\\'/g;
  #Escape the backslashes
#  $value =~ s/\\/\\\\/g;

  #Copy the name and value into the hash
    $input{$name} = $value;
}




    $name = $query->param('name');
    $id = $query->param('id');
    $campus = $query->param('campus');
    $status = $query->param('status');
    $text = $query->param('text');
    $summary = $query->param('summary');
    $date = $query->param('date');
    $grp = $query->param('grp');
    $time = $query->param('time');
    $hour = $query->param('ampm');
    $phone = $query->param('phone');
    $email = $query->param('email');
    $email1 = $query->param('email1');
    $email2 = $query->param('email2');
    $email3 = $query->param('email3');
    $email3a = $query->param('email3a');
    $email4 = $query->param('email4');
    $email4a = $query->param('email4a');
    $email5 = $query->param('email5');
    $cataloger = $query->param('cataloger');
    $email_config = $query->param('email_config');


#to be used in email before single quotes are escaped
$summary_mail = $summary;
$name_mail = $name;
$text_mail = $text;

#escape the single quotes
#$summary =~ s/\'/\\\'/g;
#$name =~ s/\'/\\\'/g;
#$text =~ s/\'/\\\'/g;
#$cataloger =~ s/\'/\\\'/g;
#$email =~ s/\'/\\\'/g;
#$phone =~ s/\'/\\\'/g;
#&recipient;

#escape the backslashes
#$summary =~ s/\\/\\\\/g;
#$name =~ s/\\/\\\\/g;
#$text =~ s/\\/\\\\/g;






if ($email3) { &Check_Email($email3a);}
if ($email4) { &Check_Email($email4a);}


    if ($email_config = "yes") {
	&Check_Email;
	if ($email_check gt 1) {
	    &bad_email_display;
	} else {
	    &recipient;
	    &slug;
	    &email_options;
	    &display_record;
	    if ($email_count > 0) {
	    &mail;
	}
    }
    }


sub print_page_start {
    print "Content-type:  text/html\n\n";
    print "<html>\n<head>\n";
    print "<title>RxWeb Form</title>\n";
    print "</head>\n<body>\n";
    print "<center>\n";
    print "<h1>RxWeb Form</h1>\n";
    print "</body>\n</html>\n";
}

sub print_page_end {
    print "</body>\n";
    print "<HEAD>\n";
    print "<META HTTP-EQUIV=\"Pragma\" CONTENT=\"no-cache\">\n";
    print "<META HTTP-EQUIV=\"Expires\" CONTENT=\"-1\">\n";
    print "</HEAD></HTML>\n";
}

##############################################################
## Displays full record after email configuration is confirmed
##############################################################

sub display_record {


print "Content-type: text/html\n\n";
print "<HTML>\n<HEAD>\n<TITLE>RxWeb  Reports Summaries</TITLE>\n</HEAD>\n<BODY BGCOLOR=\"#98AFC7\">\n";
print "<FORM ACTION=\"\/cgi-bin\/ALEPH16\/ALEPHsum.cgi\" METHOD=\"post\">\n";
print "<center>\n";
print "<H1>ALEPH Reports</H1>\n";
print "<FONT SIZE=+1 COLOR=\"#FF0000\">You have submitted report number #$id</FONT>\n";
print "<P><INPUT TYPE=\"button\" VALUE=\"RxWeb Form\" onClick=\"parent.location ='\/cgi-bin\/ALEPHform.cgi'\">\n";
print "<INPUT TYPE=\"button\" VALUE=\"RxWeb\" onClick=\"parent.location='\/cgi-bin\/ALEPH16\/ALEPHsum.cgi?id'\"></p>\n";
print "<TABLE BORDER=0 CELLPADDING=2>\n";

$dbh = DBI->connect("DBI:mysql:$database:$db_server", $user, $password);


$statement =   "SELECT people.id, report.summary, people.name, people.phone, DATE_FORMAT(report.date,'%m/%d/%y'), people.grp, people.campus, report.status, report.text FROM people, report WHERE people.id = '$id' and people.id = report.id";

$sth = $dbh->prepare($statement)
    or die "Couldn't prepare the query: $sth->errstr";
$rv = $sth->execute
    or die "Couldn't execute the query: $dbh->errstr";

while (@row = $sth->fetchrow_array) {
	  print "<TR><TD BGCOLOR=\"#FFFF00\" COLSPAN=7><B><i>Report #</i>&nbsp;$row[0]&nbsp;&nbsp;&nbsp;&nbsp;$row[1]</B></TD></FONT></TR>\n";
	   print "<TR>\n
	   <TH BGCOLOR=\"#CCCCCC\"><FONT SIZE=-1><I>Name</I></TH>\n
	   <TH BGCOLOR=\"#CCCCCC\"><FONT SIZE=-1><I>Phone</I></TH>\n
	   <TH BGCOLOR=\"#CCCCCC\"><FONT SIZE=-1><I>Date</I></TH>\n
	   <TH BGCOLOR=\"#CCCCCC\"><FONT SIZE=-1><I>Group</I></TH>\n
	   <TH BGCOLOR=\"#CCCCCC\"><FONT SIZE=-1><I>Campus</I></TH>\n
	   <TH BGCOLOR=\"#CCCCCC\"><FONT SIZE=-1><I>Status</I></TH>\n
	   <TH BGCOLOR=\"#CCCCCC\"><FONT SIZE=-1><I>Text</I></TH>\n";
#        print "<TR><TD COLSPAN=8><FONT SIZE=-1><B><i>&nbsp;</TD></TR>\n";



	  print "<TR>\n";
	  print "<TD BGCOLOR=\"#E8E8E8\" VALIGN=TOP>$row[2]</TD>\n";
	  print "<TD BGCOLOR=\"#E8E8E8\" VALIGN=TOP>$row[3]</TD>\n";
	  print "<TD BGCOLOR=\"#E8E8E8\" VALIGN=TOP>$row[4]</TD>\n";
	  print "<TD BGCOLOR=\"#E8E8E8\" VALIGN=TOP>$row[5]</TD>\n";
	  print "<TD BGCOLOR=\"#E8E8E8\" VALIGN=TOP>$row[6]</TD>\n";
	  print "<TD BGCOLOR=\"#E8E8E8\" VALIGN=TOP>$row[7]</TD>\n";
	  print "<TD BGCOLOR=\"#E8E8E8\" VALIGN=TOP>$row[8]</TD>\n";
	  print "<TD VALIGN=TOP>$row[9]<FONT SIZE=-2><a href=\"\/cgi-bin\/ALEPH16\/ALEPHreply.cgi?$row[0]\">Reply</a></FONT></TD>\n";
	  $row_id = $row[0];
	  $date = $row[4];
	  $stext = $row[8];
	  $ssummary = $row[1];
	  print "</TR>\n";
	  print "</TR>\n";
	  print "<TR><TD><FONT SIZE=-2>&nbsp;</TD></TR>\n";
      }
print "</TABLE>\n";
$rc = $sth->finish;
$rc = $dbh->disconnect;
print "</FORM>\n";
print "</BODY>\n</HTML>\n";



}

########################################################
## main mail subroutine, formats and submits to mailprog
########################################################

sub mail {

    &bcc_create;

#removes the escape from single quote
#$text =~ s/\\'/\'/g;
#$name =~ s/\\'/\'/g;
#$stext =~ s/\\'/\'/g;
#$sname =~ s/\\'/\'/g;
#$ssummary =~ s/\\'/\'/g;

    open (MAIL,"|$mailprog -t");
    print MAIL "To: $final_email_list\n";
    print MAIL "Bcc: $bcc\n" if $bcc;
    print MAIL <<END;
From: $from
Subject: NEW:$slug#$id:$ssummary

--------------------------------------------------------------------------------
Please do not reply directly to this e-mail. 
To REPLY to this Rx: http://www.itd.umd.edu/cgi-bin/ALEPH16/ALEPHreply.cgi?$id
(If prompted, sign in with the standard USMAI username/password.)
--------------------------------------------------------------------------------

Report Submitted by: $name_mail
           Report# : $id
    Date of problem: $date
   Functional Group: $grp
             Campus: $campus
             Status: $status

     Problem Report: $stext 

===================================================================================
View this Rx online: http://www.itd.umd.edu/cgi-bin/ALEPH16/ALEPHsum_full.cgi?$id     
END
    close (MAIL);
}

############################################################
## constructs the bcc option for sendmail
## if aleph is part of the final email list
## then bcc will be empty, other bcc = aleph@itd.umd.edu
############################################################

sub bcc_create {

    if ($final_email_list =~ /usmaialeph\@umd.edu/i) {
	$bcc = '';
    }else{
	$bcc = "usmaialeph\@umd.edu";
    }
}


############################################################
## determines the final list of emails submitted to mailprog
############################################################

sub email_options {

    if ($email1) {
	 $recipient =~ s/\s+//g;
	 $rec1 = "$recipient";
	 $email_count++;
    }

    if ($email2) {
	 $email =~ s/\s+//g;
	 $rec2 = ",$email";
	 $email_count++;
    }

    if ($email3) {
	 $email3a =~ s/\s+//g;
	 $rec3 = ",$email3a";
	 $email_count++;
    }

    if ($email4) {
	 $email4a =~ s/\s+//g;
	 $rec4 = ",$email4a";
	 $email_count++;
    }


    if ($email5) {
	 $rec5 = ",$email5";
	 $email_count++;
    }

    $final_email_list = $rec1 . $rec2 . $rec3 . $rec4 . $rec5;

    if ($email_count < 1) {
	 $final_email_list = "jamieb\@kitabu.umd.edu";
    }

}

##########################################################
## validates the format of any additional emails submitted
##########################################################

sub Check_Email 

{

     if ($_[0] =~ /(@.*@)|(,)|\s+|(\.\.)|(@\.)|(\.@)|(^\.)|(\.$)|(^\d+)|(\d+$)/ || ($_[0] !~ /^.+\@localhost$/ && $_[0] !~ /^.+\@\[?(\w|[-.])+\.[a-zA-Z]{2,3}|[0-9]{1,3}\]?$/))             { $email_check++; push @store, $_[0]; }
	 else { }

    }

#############################################################
## displays error message when bad email address is submitted
#############################################################

sub bad_email_display {

    print "Content-type:  text/html\n\n";
    print "<html>\n<head>\n";
    print "<title>RxWeb Reply</title>\n";
    print "</head>\n<body>\n";
    print "<center>\n";
    print "<h1>RxWeb Reply</h1>\n";
    print "<h3>Not a valid email address.</h3>\n";
    print "<table>\n";
    print "<tr><td><cite><font size=+1>\n";

    foreach $store (@store) {
	 print "$store<br>\n";
    }

    print "</cite></font></td></tr></table>\n";
    print "<SCRIPT=\"Javascript\">\n";
    print "<form>\n";
    print "<p><input TYPE=\"button\" VALUE=\" Back \" onClick=\"history.go(-1)\"></p>\n";
    print "</form>\n";
    print "</body>\n</html>\n";

}

########################################################################
## determines the group recipient from the group selected in the webform
########################################################################

sub recipient {

if ($grp eq "Circulation") {
    $recipient = "usmaicoicircresill\@umd.edu";
}
if ($grp eq "Technical") {
    $recipient = "usmaicoidesktech\@umd.edu";
}
if ($grp eq "Web OPAC") {
    $recipient = "usmaicoiuserinter\@umd.edu";
}

if ($grp eq "Cataloging") {
    $recipient = "usmaicoicatdbmaint\@umd.edu";
}

if ($grp eq "Serials") {
    $recipient = "usmaicoiseracq\@umd.edu";
}

if ($grp eq "Acquisitions") {
    $recipient = "usmaicoiseracq\@umd.edu";
}

if ($grp eq "Item Maintenance") {
    $recipient = "usmaicoicircresill\@umd.edu,usmaicoicatdbmaint\@umd.edu,usmaicoiseracq\@umd.edu";
}

if ($grp eq "Reserves") {
    $recipient = "usmaicoicircresill\@umd.edu,usmaicoiuserinter\@umd.edu";
}

if ($grp eq "other") {
    $recipient = "usmaialeph\@umd.edu";
}

if ($grp eq "Report request") {
    $recipient = "usmaialeph\@umd.edu";
}

if ($grp eq "Change request") {
    $recipient = "usmaialeph\@umd.edu";
}

if ($grp eq "ILL") {
    $recipient = "ilug\@umd.edu,usmaicoicircresill\@umd.edu";
}
}


##################################################################################
## determines the slug (prefix for email) from the group selected in the webform
##################################################################################

sub slug {

if ($grp eq "Circulation") {
    $slug = "CIRC:";
}
if ($grp eq "Technical") {
    $slug = "TECH:";
}
if ($grp eq "Web OPAC") {
    $slug = "OPAC:";
}

if ($grp eq "Cataloging") {
    $slug = "CAT:";
}

if ($grp eq "Serials") {
    $slug = "SER:";
}

if ($grp eq "Acquisitions") {
    $slug = "ACQ:";
}

if ($grp eq "Item Maintenance") {
    $slug = "ITM:";
}

if ($grp eq "Reserves") {
    $slug = "RES:";
}

if ($grp eq "other") {
    $slug = "OTHR:";
}

if ($grp eq "Report request") {
    $slug = "RQST:";
}

if ($grp eq "Change request") {
    $slug = "CHNG:";
}

if ($grp eq "ILL") {
    $slug = "ILL:";
}
}






































